## 1. Explain the difference between a stack and a queue. Provide real life examples of real-life scenarios where each of them are used appropriately.

### A stack is a data structure that follows the Last In First Out (LIFO) principle. This means that the last element added to the stack is the first one to be removed, while a queue A queue is a data structure that follows the First In First Out (FIFO) principle. This means that the first element added to the queue is the first one to be removed.
### Real-life scenarios for a stack: - a stack can be like a stack of plates: when we add to the top and take from the top.
                                   - a stack of towels in a gym, yot grab one from the top and after laundry, they're placed back on top.
                                   - when we navigate through a series of menus on the phone, the last action we perform is the frist one we undo when we press the "back" button.
### Real-life scenarios for a queue: - waiting in line at a cinema to buy tickets.
                                     - waiting your turn at a doctor's office or a clinic for a medical appointment.
                                     - joining a popular restaurant to order your favourite meal.


## 2. What is the difference between an array and a linked list? Provide advantages and disadvantages of each data structure.

### An array stores elements in contiguous memory locations, allowing direct access by index but has a fixed size, while a linked list stores elements as nodes with references to the next node, allowing dynamic resizing but lacks direct access by index.
### Advantages of arrays: - constant-time access to elements using index.
                          - suitable for random access.
    Disdvantages of arrays: - fixed size, difficult to resize dynamically.
                            - costly insertion and deletion operations as elements need to be shifted.
### Advantages of linked lists: - dynamic size, easily resizable.
                                - efficient insertion and deletion operations.
    Disadvantages of linked lists: - sequential access, not suitable for random access.
                                   - extra memory overhead due to pointers.


## 3. What is HTTP? How is it different from HTTPS?

### HTTP (Hypertext Transfer Protocol) is a protocol used for transmitting hypertext requests and information on the World Wide Web, while HTTPS (Hypertext Transfer Protocol Secure) is a secure version of HTTP that uses encryption to secure the data exchanged between the client and the server. 
    HTTP operates over a TCP/IP connection and is commonly used for fetching web pages, images, videos, and other resources from web servers to web browsers, while HTTPS employs SSL/TLS protocols to encrypt data, ensuring confidentiality and integrity of information transmitted over the network.


## 4. Can you give some examples of common HTTP response codes?

### 200 OK : The request has succeeded.
    404 Not Found: The server cannot find the requested resource.
    500 Internal Server Error: The server is unable to process the request.


## 5. What is the difference between authorization and authentication?

### Authentication is the process of verifying a user's identity by confirming their credentials (username/password or security tokens) and it ensures only legitimate users access protected resources, while authorization is the process of determining what actions or resources a user is allowed to access after they have been authenticated.


## 6. How would you explain to a 5-year-old how the WWW works?

### Imagine the World Wide Web is like a giant playground full of toys. Each toy is kept in a special box, and there are lots of boxes all around the playground.
When you want to play with a toy, you ask your friend, to help you find it. Your friend knows where all the boxes are and can find the one you want. 
Once your friend finds the right box, they open it up, and you can start playing with the toy inside. 
The World Wide Web is like this playground, and your friend, the web browser, helps you find and play with all the fun stuff!










